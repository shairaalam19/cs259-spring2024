diff --git a/profiling-2/utils.cpp b/profiling-2/utils.cpp
index 6d60155..c4a8232 100644
--- a/profiling-2/utils.cpp
+++ b/profiling-2/utils.cpp
@@ -473,11 +473,19 @@ extern int vx_dump_perf(vx_device_h hdevice, FILE* stream) {
       , calcAvgPercent(scrb_csrs, sfu_total)
       , calcAvgPercent(scrb_wctl, sfu_total)
     );
+
+    uint64_t active_warp_total = get_csr_64(staging_buf.data(), VX_CSR_MPM_SCHED_AW);
+    uint64_t stalled_warp_total = get_csr_64(staging_buf.data(), VX_CSR_MPM_SCHED_SW);
+    float warp_efficiency = 1 - (static_cast<float>(stalled_warp_total)/active_warp_total);
+
     fprintf(stream, "PERF: ifetches=%ld\n", ifetches);
     fprintf(stream, "PERF: loads=%ld\n", loads);
     fprintf(stream, "PERF: stores=%ld\n", stores);    
     fprintf(stream, "PERF: ifetch latency=%d cycles\n", ifetch_avg_lat);
-    fprintf(stream, "PERF: load latency=%d cycles\n", load_avg_lat);    
+    fprintf(stream, "PERF: load latency=%d cycles\n", load_avg_lat);
+    fprintf(stream, "PERF: active warp total=%ld \n", active_warp_total);
+    fprintf(stream, "PERF: stalled warp total=%ld \n", stalled_warp_total);
+    fprintf(stream, "PERF: warp_efficiency=%f\n", warp_efficiency);
   } break;  
   case VX_DCR_MPM_CLASS_MEM: {    
     if (l2cache_enable) {
diff --git a/profiling-2/VX_csr_data.sv b/profiling-2/VX_csr_data.sv
index b1e6843..f40968a 100644
--- a/profiling-2/VX_csr_data.sv
+++ b/profiling-2/VX_csr_data.sv
@@ -190,6 +190,10 @@ import VX_fpu_pkg::*;
                         `VX_CSR_MPM_SCHED_ID_H      : read_data_ro_r = 32'(pipeline_perf_if.sched_idles[`PERF_CTR_BITS-1:32]);
                         `VX_CSR_MPM_SCHED_ST        : read_data_ro_r = pipeline_perf_if.sched_stalls[31:0];
                         `VX_CSR_MPM_SCHED_ST_H      : read_data_ro_r = 32'(pipeline_perf_if.sched_stalls[`PERF_CTR_BITS-1:32]);
+                        `VX_CSR_MPM_SCHED_AW        : read_data_ro_r = pipeline_perf_if.sched_active_warp_count[31:0];
+                        `VX_CSR_MPM_SCHED_AW_H      : read_data_ro_r = 32'(pipeline_perf_if.sched_active_warp_count[`PERF_CTR_BITS-1:32]);
+                        `VX_CSR_MPM_SCHED_SW        : read_data_ro_r = pipeline_perf_if.sched_stalled_warp_count[31:0];
+                        `VX_CSR_MPM_SCHED_SW_H      : read_data_ro_r = 32'(pipeline_perf_if.sched_stalled_warp_count[`PERF_CTR_BITS-1:32]);
                         `VX_CSR_MPM_IBUF_ST         : read_data_ro_r = pipeline_perf_if.ibf_stalls[31:0];
                         `VX_CSR_MPM_IBUF_ST_H       : read_data_ro_r = 32'(pipeline_perf_if.ibf_stalls[`PERF_CTR_BITS-1:32]);
                         `VX_CSR_MPM_SCRB_ST         : read_data_ro_r = pipeline_perf_if.scb_stalls[31:0];
diff --git a/profiling-2/VX_pipeline_perf_if.sv b/profiling-2/VX_pipeline_perf_if.sv
index 7d42187..eae2f7e 100644
--- a/profiling-2/VX_pipeline_perf_if.sv
+++ b/profiling-2/VX_pipeline_perf_if.sv
@@ -16,6 +16,8 @@
 interface VX_pipeline_perf_if ();
     wire [`PERF_CTR_BITS-1:0] sched_idles;
     wire [`PERF_CTR_BITS-1:0] sched_stalls;
+    wire [`PERF_CTR_BITS-1:0] sched_active_warp_count;
+    wire [`PERF_CTR_BITS-1:0] sched_stalled_warp_count;
     wire [`PERF_CTR_BITS-1:0] ibf_stalls;
     wire [`PERF_CTR_BITS-1:0] scb_stalls;
     wire [`PERF_CTR_BITS-1:0] units_uses [`NUM_EX_UNITS];
@@ -29,7 +31,9 @@ interface VX_pipeline_perf_if ();
 
     modport schedule (
         output sched_idles,
-        output sched_stalls        
+        output sched_stalls,
+        output sched_active_warp_count,
+        output sched_stalled_warp_count 
     );
 
     modport issue (
@@ -42,6 +46,8 @@ interface VX_pipeline_perf_if ();
     modport slave (
         input sched_idles,
         input sched_stalls,
+        input sched_active_warp_count,
+        input sched_stalled_warp_count,
         input ibf_stalls,
         input scb_stalls,
         input units_uses,
diff --git a/profiling-2/VX_schedule.sv b/profiling-2/VX_schedule.sv
index 36bdf9e..70b7fb1 100644
--- a/profiling-2/VX_schedule.sv
+++ b/profiling-2/VX_schedule.sv
@@ -391,21 +391,31 @@ module VX_schedule import VX_gpu_pkg::*; #(
     reg [`PERF_CTR_BITS-1:0] perf_sched_idles;
     reg [`PERF_CTR_BITS-1:0] perf_sched_stalls;
 
+    reg [`PERF_CTR_BITS-1:0] perf_active_warp_count;
+    reg [`PERF_CTR_BITS-1:0] perf_stalled_warp_count;
+
     wire schedule_idle = ~schedule_valid;
     wire schedule_stall = schedule_if.valid && ~schedule_if.ready;
 
     always @(posedge clk) begin
         if (reset) begin
             perf_sched_idles  <= '0;
-            perf_sched_stalls <= '0;            
+            perf_sched_stalls <= '0;
+            perf_active_warp_count <= '0;
+            perf_stalled_warp_count <= '0;      
         end else begin
             perf_sched_idles  <= perf_sched_idles + `PERF_CTR_BITS'(schedule_idle);
             perf_sched_stalls <= perf_sched_stalls + `PERF_CTR_BITS'(schedule_stall);
+            perf_active_warp_count <= perf_active_warp_count + `PERF_CTR_BITS'($countones(active_warps));
+            perf_stalled_warp_count <= perf_stalled_warp_count + `PERF_CTR_BITS'($countones(stalled_warps));
         end
     end
 
     assign perf_schedule_if.sched_idles = perf_sched_idles;
-    assign perf_schedule_if.sched_stalls = perf_sched_stalls;    
+    assign perf_schedule_if.sched_stalls = perf_sched_stalls;
+    assign perf_schedule_if.sched_active_warp_count =  perf_active_warp_count;
+    assign perf_schedule_if.sched_stalled_warp_count =  perf_stalled_warp_count;
+
 `endif
 
 endmodule
diff --git a/profiling-2/VX_types.h b/profiling-2/VX_types.h
index ffcb3f6..9caec61 100644
--- a/profiling-2/VX_types.h
+++ b/profiling-2/VX_types.h
@@ -1,5 +1,5 @@
 // auto-generated by gen_config.py. DO NOT EDIT
-// Generated at 2024-04-21 21:47:41.433478
+// Generated at 2024-04-25 21:17:25.862946
 
 // Translated from ./rtl/VX_types.vh:
 
@@ -107,6 +107,11 @@
 #define VX_CSR_MPM_SCRB_WCTL_H          0xB90
 #define VX_CSR_MPM_SCRB_CSRS            0xB11
 #define VX_CSR_MPM_SCRB_CSRS_H          0xB91
+#define VX_CSR_MPM_SCHED_AW				0xB12
+#define VX_CSR_MPM_SCHED_AW_H			0xB92
+#define VX_CSR_MPM_SCHED_SW				0xB13
+#define VX_CSR_MPM_SCHED_SW_H			0xB93
+
 
 // Machine Performance-monitoring memory counters
 // PERF: icache
diff --git a/profiling-2/VX_types.vh b/profiling-2/VX_types.vh
index 9e875d2..d04aeb5 100644
--- a/profiling-2/VX_types.vh
+++ b/profiling-2/VX_types.vh
@@ -102,6 +102,11 @@
 `define VX_CSR_MPM_SCRB_WCTL_H          12'hB90
 `define VX_CSR_MPM_SCRB_CSRS            12'hB11
 `define VX_CSR_MPM_SCRB_CSRS_H          12'hB91
+`define VX_CSR_MPM_SCHED_AW				12'hB12
+`define VX_CSR_MPM_SCHED_AW_H			12'hB92
+`define VX_CSR_MPM_SCHED_SW				12'hB13
+`define VX_CSR_MPM_SCHED_SW_H			12'hB93
+
 
 // Machine Performance-monitoring memory counters
 // PERF: icache
